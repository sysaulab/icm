Sylvain Saucier
Sep 22, 2024 at 11:52 AM â€“ FB15223405

Basic Information
Please provide a descriptive title for your feedback:
File size >= 2^63 bytes reported as zero.
Which platform is most relevant for your report?
macOS
Which technology does your report involve?
Filesystem
What type of feedback are you reporting?
Incorrect/Unexpected Behavior
What build does the issue occur on?
macOS 14.6.1 (23G93)
Where does the issue occur?
On device
Description
Please describe the issue and what steps we can take to reproduce it:
I created a virtual filesystem that provides a vast amount (1 yobibytes) of random data that can be seeded and replayed. I expose it as files using libFUSE (FUSE-T variant) and found that I cannot declare a file size of 2^63 bytes or more, my files become size-less and fail to open. I saw no counter indication in the man documentation and the optional _FILE_OFFSET_BITS is not provided to indicate a restriction in bit usage of off_t. If the full 64bit offset is technically allowed, developers should be able to declare file sizes up to, and including, 2^64.

I understand this is an edge case that will never happen on regular storage devices any time soon. However generative filesystems such as this one can make full use of the 64 bit spectrum. 

Written in C and compiled with  -D_FILE_OFFSET_BITS=64 to enable large file support.

Replicate: 

1. Install FUSE-T before building the project with
2. Download https://github.com/sysaulab/libseedy/tree/devel/
3. "cd FUSE"
5. I declare the file size at line 148 in rands-fuse.c. (change 0x7FFFFFFFFFFFFFFF to 0x8000000000000000 to replicate the bug.)
4. "make"
5. "./randfs-fuse ~/mount_point_here"
6. In mount point, CMD-I any file xx.bin.